{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/app/sidebar/Sidebar.js"],"sourcesContent":["const Sidebar = ({ chats, setChats, onSelectChat }) => {\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/chats\", {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n        });\n        const data = await response.json();\n        setChats(data); // ✅ Update lifted state\n      } catch (error) {\n        console.error(\"Error fetching chats:\", error);\n      }\n    };\n\n    fetchChats();\n    const interval = setInterval(fetchChats, 5000);\n    return () => clearInterval(interval);\n  }, [setChats]);\n\n  return (\n    <div className=\"w-full h-screen bg-gray-900 text-white p-6 overflow-y-auto\">\n      <ul>\n        {chats.map((chat, index) => (\n          <li key={chat.id || index} onClick={() => onSelectChat(chat)}>\n            <strong>{chat.title || \"Untitled Chat\"}</strong>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"names":[],"mappings":";AAAA,MAAM,UAAU,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE;IAChD,UAAU;QACR,MAAM,aAAa;YACjB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,+BAA+B;oBAC1D,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;oBAC9C,aAAa;gBACf;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,SAAS,OAAO,wBAAwB;YAC1C,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;YACzC;QACF;QAEA;QACA,MAAM,WAAW,YAAY,YAAY;QACzC,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC;KAAS;IAEb,qBACE,QAAC;QAAI,WAAU;kBACb,cAAA,QAAC;sBACE,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,QAAC;oBAA0B,SAAS,IAAM,aAAa;8BACrD,cAAA,QAAC;kCAAQ,KAAK,KAAK,IAAI;;;;;;mBADhB,KAAK,EAAE,IAAI;;;;;;;;;;;;;;;AAO9B"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/components/ui/input.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef(({ className, type, ...props }, ref) => {\n  return (\n    (<input\n      type={type}\n      className={cn(\n        \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props} />)\n  );\n})\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACG,8OAAC;QACA,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;AACA,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    (<Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props} />)\n  );\n})\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxF,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACG,8OAAC;QACA,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-xl border bg-card text-card-foreground shadow\", className)}\n    {...props} />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props} />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props} />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props} />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yDAAyD;QACtE,GAAG,KAAK;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/app/chat/ChatBot.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Send } from \"lucide-react\";\n\nexport default function ChatBot() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [chatId, setChatId] = useState(null);\n  const startNewChat = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/start_chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify({ title: \"Prev Chat\" }) // Add title to request\n      });\n  \n      const data = await response.json();\n      setChatId(data.chat_id);\n    } catch (error) {\n      console.error(\"Error starting chat:\", error);\n    }\n  };\n  \n  useEffect(() => {\n    startNewChat(); // Start a new chat when component mounts\n  }, []);  \n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    \n    const timestamp = new Date().toISOString();\n    const newMessage = { sender: \"user\", text: input, timestamp };\n\n    setMessages((prev) => [...prev, newMessage]);\n    setInput(\"\");\n\n    try {\n      const response = await fetch(\"http://localhost:8000/save_chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          chat_id: chatId,\n          message: newMessage, \n        }),\n      });\n\n      const data = await response.json();\n      console.log(\"Chat saved:\", data);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const endChat = async (chatId, chatTitle) => {\n    console.log(\"chatId:\", chatId, \"chatTitle:\", chatTitle, \"Type of chatId:\", typeof chatId);\n  \n    if (chatId instanceof Event) {\n      console.error(\"❌ Event object mistakenly passed to endChat! Aborting.\");\n      return;\n    }\n  \n    try {\n      const response = await fetch(\"http://localhost:8000/end_chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify({ chat_id: String(chatId), title: String(chatTitle) }), // 🔹 Convert to string\n      });\n  \n      const data = await response.json();\n      if (data.error) {\n        console.error(\"Error ending chat:\", data.error);\n        return;\n      }\n  \n      // ✅ Update state\n      setChats((prevChats) => [...prevChats, { chat_id: chatId, title: chatTitle, messages: [] }]);\n  \n    } catch (error) {\n      console.error(\"Error ending chat:\", error);\n    }\n  };\n  \n  \n  \n  return (\n    <div className=\"flex flex-col h-screen mx-auto p-4 bg-gray-900 text-white rounded-lg shadow-lg border border-gray-700 custom-scrollbar\">\n      <h1 className=\"text-2xl font-semibold text-center mb-4 text-gray-200\">\n        AI-Powered Assistant\n      </h1>\n      <div className=\"flex-1 overflow-y-auto space-y-3 p-2 bg-gray-800 rounded-lg shadow-inner custom-scrollbar\">\n        {messages.map((msg, idx) => (\n          <Card\n            key={idx}\n            className={`rounded-2xl p-3 shadow-md text-sm max-w-xs ${\n              msg.sender === \"user\"\n                ? \"bg-gray-500 text-white\"\n                : \"bg-gray-700 text-gray-300\"\n            }`}\n          >\n            <CardContent>\n              <p className=\"text-xs text-gray-400\">\n                {new Date(msg.timestamp).toLocaleTimeString()}\n              </p>\n              <p>{msg.text}</p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n      <div className=\"flex gap-3 mt-4 bg-gray-800 p-3 rounded-lg shadow-md\">\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"flex-1 bg-gray-700 text-white border-none focus:ring-2 focus:ring-blue-400 rounded-lg p-2\"\n        />\n        <Button\n          onClick={sendMessage}\n          className=\"p-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-md\"\n        >\n          <Send size={20} />\n        </Button>\n        <Button\n          onClick={endChat}\n          className=\"p-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-md\"\n        >\n          Save Chat\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/app/auth/Login.js"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\n\nexport default function Login({ onLogin }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n\n    const endpoint = isSignUp ? \"http://localhost:8000/signup\" : \"http://localhost:8000/login\";\n\n    try {\n      const payload = isSignUp\n        ? { name, email, password } \n        : { name:\"1234\", email, password }; // \"username\" is required for login\n\n      let response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        credentials: \"include\", // Ensure cookies are sent\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(isSignUp ? \"Signup failed\" : \"Invalid credentials\");\n      }\n\n      if (isSignUp) {\n        setIsSignUp(false); // Switch to login after successful signup\n      } else {\n        onLogin(); // Redirect to chatbot or dashboard\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-gray-900 text-white\">\n      <div className=\"bg-gray-800 p-6 rounded-lg shadow-lg w-96\">\n        <h2 className=\"text-2xl font-bold mb-4 text-center\">{isSignUp ? \"Sign Up\" : \"Login\"}</h2>\n        {error && <p className=\"text-red-500 text-sm mb-3\">{error}</p>}\n        <form onSubmit={handleSubmit}>\n          {isSignUp && (\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium mb-1\">Name</label>\n              <input\n                type=\"text\"\n                className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 focus:outline-none\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n            </div>\n          )}\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-1\">Email</label>\n            <input\n              type=\"email\"\n              className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 focus:outline-none\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium mb-1\">Password</label>\n            <input\n              type=\"password\"\n              className=\"w-full p-2 border border-gray-600 rounded bg-gray-700 focus:outline-none\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 rounded\"\n          >\n            {isSignUp ? \"Sign Up\" : \"Login\"}\n          </button>\n        </form>\n        <p className=\"text-sm text-center mt-4\">\n          {isSignUp ? \"Already have an account?\" : \"Don't have an account?\"}{\" \"}\n          <button\n            onClick={() => setIsSignUp(!isSignUp)}\n            className=\"text-blue-400 hover:underline\"\n          >\n            {isSignUp ? \"Login\" : \"Sign Up\"}\n          </button>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS,MAAM,EAAE,OAAO,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,MAAM,WAAW,WAAW,iCAAiC;QAE7D,IAAI;YACF,MAAM,UAAU,WACZ;gBAAE;gBAAM;gBAAO;YAAS,IACxB;gBAAE,MAAK;gBAAQ;gBAAO;YAAS,GAAG,mCAAmC;YAEzE,IAAI,WAAW,MAAM,MAAM,UAAU;gBACnC,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,WAAW,kBAAkB;YAC/C;YAEA,IAAI,UAAU;gBACZ,YAAY,QAAQ,0CAA0C;YAChE,OAAO;gBACL,WAAW,mCAAmC;YAChD;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAuC,WAAW,YAAY;;;;;;gBAC3E,uBAAS,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;8BACpD,8OAAC;oBAAK,UAAU;;wBACb,0BACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAClD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;oCACvC,QAAQ;;;;;;;;;;;;sCAId,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAClD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCACxC,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAClD,8OAAC;oCACC,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;;;;;;;;;;;;sCAGZ,8OAAC;4BACC,MAAK;4BACL,WAAU;sCAET,WAAW,YAAY;;;;;;;;;;;;8BAG5B,8OAAC;oBAAE,WAAU;;wBACV,WAAW,6BAA6B;wBAA0B;sCACnE,8OAAC;4BACC,SAAS,IAAM,YAAY,CAAC;4BAC5B,WAAU;sCAET,WAAW,UAAU;;;;;;;;;;;;;;;;;;;;;;;AAMlC"}},
    {"offset": {"line": 672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file:///home/shravan/Documents/hackathons/medinos/medinos_chatbot/src/app/page.js"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport ChatBot from \"./chat/ChatBot\";\nimport Login from \"./auth/Login\";\n\nexport default function Home() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [chats, setChats] = useState([]); // ✅ Lifted up state\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/auth/check\", {\n          credentials: \"include\",\n        });\n\n        if (response.ok) {\n          setIsLoggedIn(true);\n        } else {\n          setIsLoggedIn(false);\n        }\n      } catch (error) {\n        console.error(\"Auth check failed:\", error);\n        setIsLoggedIn(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  return (\n    <>\n      {!isLoggedIn ? (\n        <Login onLogin={() => setIsLoggedIn(true)} />\n      ) : (\n        <div className=\"grid grid-cols-[1fr_3fr] h-screen\">\n          <div className=\"bg-gray-900 text-white p-4\">\n            <Sidebar chats={chats} setChats={setChats} /> {/* ✅ Pass chats */}\n          </div>\n          <div className=\"bg-gray-900 p-4\">\n            <ChatBot setChats={setChats} /> {/* ✅ Pass setChats */}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE,GAAG,oBAAoB;IAE5D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,oCAAoC;oBAC/D,aAAa;gBACf;gBAEA,IAAI,SAAS,EAAE,EAAE;oBACf,cAAc;gBAChB,OAAO;oBACL,cAAc;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,cAAc;YAChB;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE;kBACG,CAAC,2BACA,8OAAC,2HAAA,CAAA,UAAK;YAAC,SAAS,IAAM,cAAc;;;;;iCAEpC,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,gIAAA,CAAA,UAAO;4BAAC,OAAO;4BAAO,UAAU;;;;;;wBAAY;;;;;;;8BAE/C,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,6HAAA,CAAA,UAAO;4BAAC,UAAU;;;;;;wBAAY;;;;;;;;;;;;;;AAM3C"}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}